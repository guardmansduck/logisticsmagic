# .github/workflows/build-auto-xcode.yml
name: Build unsigned .ipa from raw Swift files

on:
  workflow_dispatch:
    inputs:
      scheme:
        description: 'Xcode scheme to build'
        required: true
        default: 'MyApp'
      configuration:
        description: 'Build configuration'
        required: false
        default: 'Release'
      sdk:
        description: 'SDK to build against'
        required: false
        default: 'iphoneos'
      export_name:
        description: 'Filename to use for produced .ipa (without extension)'
        required: false
        default: 'UnsignedApp'

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Create minimal Xcode project
        run: |
          set -euo pipefail
          PROJECT_NAME="${{ github.event.inputs.scheme }}"
          APP_DIR="MyApp"
          mkdir -p "$APP_DIR"
          cd "$APP_DIR"

          # Create minimal project using xcodebuild
          # Generate a dummy iOS app project using SwiftUI template
          xcodebuild -create-xcframework \
            -output /tmp/dummy.xcframework >/dev/null 2>&1 || true

          # Use 'xcodeproj' gem to create project structure
          gem install xcodeproj
          ruby -e "
            require 'xcodeproj'
            project = Xcodeproj::Project.new('${PROJECT_NAME}.xcodeproj')
            target = project.new_target(:application, '${PROJECT_NAME}', :ios, '17.0')
            source_group = project.main_group.new_group('Sources')
            Dir.glob('../*.swift').each do |file|
              file_ref = project.main_group.new_file(file)
              target.add_file_references([file_ref])
            end
            project.save
          "
          cd ..

      - name: Build .app unsigned
        run: |
          set -euo pipefail
          BUILD_DIR="$(pwd)/build"
          SCHEME="${{ github.event.inputs.scheme }}"
          CONFIG="${{ github.event.inputs.configuration }}"
          SDK="${{ github.event.inputs.sdk }}"
          xcodebuild -project "${SCHEME}.xcodeproj" \
                     -scheme "${SCHEME}" \
                     -configuration "${CONFIG}" \
                     -sdk "${SDK}" \
                     BUILD_DIR="$BUILD_DIR" \
                     clean build \
                     CODE_SIGNING_ALLOWED=NO \
                     CODE_SIGN_IDENTITY="" \
                     CODE_SIGNING_REQUIRED=NO

      - name: Locate .app
        id: find_app
        run: |
          APP_PATH=$(find "$(pwd)/build" -type d -name "*.app" -print -quit || true)
          if [ -z "$APP_PATH" ]; then
            echo "::error ::.app not found"
            exit 1
          fi
          echo "APP_PATH=$APP_PATH" >> "$GITHUB_OUTPUT"

      - name: Package unsigned .ipa
        run: |
          APP_PATH="${{ steps.find_app.outputs.APP_PATH }}"
          IPA_NAME="${{ github.event.inputs.export_name }}.ipa"
          TMPDIR=$(mktemp -d)
          mkdir -p "$TMPDIR/Payload"
          cp -a "$APP_PATH" "$TMPDIR/Payload/"
          (cd "$TMPDIR" && zip -qry "$IPA_NAME" Payload)
          mkdir -p artifacts
          mv "$TMPDIR/$IPA_NAME" artifacts/
          echo "IPA ready at artifacts/$IPA_NAME"

      - name: Upload unsigned .ipa artifact
        uses: actions/upload-artifact@v4
        with:
          name: unsigned-ipa
          path: artifacts/*.ipa
